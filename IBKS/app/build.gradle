plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
//    id "com.google.protobuf" version "0.8.17"
//    id 'com.google.gms.google-services'
//    id 'com.google.firebase.crashlytics'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.inzisoft.ibks"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        // Enables Jetpack Compose for this module
        compose true
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += [
                '-Xjvm-default=enable'
        ]
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    viewBinding {
        enabled = true
    }


    flavorDimensions "SERVICE"
    productFlavors {
        dev {
            dimension "SERVICE"

            applicationIdSuffix ".dev"

            buildConfigField 'String', 'PROTOCOL', '"http"'

//            buildConfigField 'String', 'WEB_URL', '"61.109.169.71"'     //개발서버
//            buildConfigField 'String', 'WEB_URL', '"61.109.169.171"'    // 최영수
            buildConfigField 'String', 'WEB_URL', '"61.109.146.94"'         // 민찬우
//            buildConfigField 'String', 'WEB_URL', '"61.109.169.160"'        // 나돈휘

            // 화면 PORT
            buildConfigField 'String', 'WEB_PORT', '"8080"'

            // API 서버 URL
            buildConfigField 'String', 'API_SERVER_URL', '"61.109.169.71"'

            // API 서버 PORT
            buildConfigField 'String', 'API_SERVER_PORT', '"8080"'

            // 전자문서 서버 API
            buildConfigField 'String', 'MAIN_API', '"api/v1"'

            // 보안키패드 암호화 여부
            buildConfigField 'Boolean', 'ENCRYPT_KEYPAD', 'false'

            // API 암호화 여부
            buildConfigField 'Boolean', 'ENCRYPT_API', 'true'
        }

        itest {
            dimension "SERVICE"

            applicationIdSuffix ".itest"

            buildConfigField 'String', 'PROTOCOL', '"https"'

            buildConfigField 'String', 'WEB_URL', '"testibks.qsvc.co.kr"'     //개발서버

            // 화면 PORT
            buildConfigField 'String', 'WEB_PORT', '"443"'

            // API 서버 URL
            buildConfigField 'String', 'API_SERVER_URL', '"testibks.qsvc.co.kr"'

            // API 서버 PORT
            buildConfigField 'String', 'API_SERVER_PORT', '"443"'

            // 전자문서 서버 API
            buildConfigField 'String', 'MAIN_API', '"api/v1"'

            // 보안키패드 암호화 여부
            buildConfigField 'Boolean', 'ENCRYPT_KEYPAD', 'false'

            // API 암호화 여부
            buildConfigField 'Boolean', 'ENCRYPT_API', 'true'
        }

        real {
            dimension "SERVICE"

            buildConfigField 'String', 'PROTOCOL', '"https"'

            buildConfigField 'String', 'WEB_URL', '"testibks.qsvc.co.kr"'     //서버

            // 화면 PORT
            buildConfigField 'String', 'WEB_PORT', '"443"'

            // API 서버 URL
            buildConfigField 'String', 'API_SERVER_URL', '"testibks.qsvc.co.kr"'

            // API 서버 PORT
            buildConfigField 'String', 'API_SERVER_PORT', '"443"'

            // 전자문서 서버 API
            buildConfigField 'String', 'MAIN_API', '"api/v1"'

            // 보안키패드 암호화 여부
            buildConfigField 'Boolean', 'ENCRYPT_KEYPAD', 'false'

            // API 암호화 여부
            buildConfigField 'Boolean', 'ENCRYPT_API', 'true'
        }
    }
}

dependencies {
    // Dependency on local binaries
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.vectordrawable:vectordrawable:1.1.0"
    implementation 'androidx.core:core-ktx:1.8.0'

    // Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.activity:activity-compose:$activity_compose_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:$constlayout_compose_version"

    // Glide
    implementation "com.github.skydoves:landscapist-glide:1.6.1"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'com.google.android.material:material:1.4.0'

    // Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    // Kotlin Navigation
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")
    implementation("androidx.navigation:navigation-compose:$nav_version")

    // Retrofit2
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    // Retrofit2 Gson Converter
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    // http logging interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Webkit
    implementation "androidx.webkit:webkit:1.4.0"

    // Splash Screen
    implementation("androidx.core:core-splashscreen:1.0.0")

    // Preferences DataStore
    implementation "androidx.datastore:datastore-preferences:$datastore_version"
    implementation "androidx.datastore:datastore-core:$datastore_version"

    // Protobuf
    implementation "com.google.protobuf:protobuf-javalite:3.18.0"

    // Paperless
    implementation files('libs/MLPaperlessODS-1.3.3-qcard.aar')

    // OCR
    implementation files('libs/OcrManager_v4.8.1.0.aar')

    // Mobile Vaccine
    implementation files('libs/libIncaCommon.jar')
    implementation files('libs/libIncaMobileSDK.jar')

    // Secure Keypad
    implementation files('libs/keycrypt.jar')
    implementation files('libs/npcrypto.jar')

    // 한국인식산업 특징점 추출
    implementation files('libs/FaceprintH-3.0.5.4-release.aar')
//
//    // Firebase
//    implementation platform('com.google.firebase:firebase-bom:30.5.0')
//    implementation 'com.google.firebase:firebase-analytics-ktx'
//    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    // Logger
    implementation 'com.orhanobut:logger:2.2.0'

    // Pager
    implementation "com.google.accompanist:accompanist-pager:0.23.1"
}